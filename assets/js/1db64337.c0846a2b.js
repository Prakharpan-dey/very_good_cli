"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[372],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(r),g=o,m=u["".concat(l,".").concat(g)]||u[g]||p[g]||a;return r?n.createElement(m,i(i({ref:t},d),{},{components:r})):n.createElement(m,i({ref:t},d))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6777:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Overview",s={unversionedId:"overview",id:"overview",title:"Overview",description:"Very Good CLI is a Command-Line interface that enables you to generate VGV-opinionated templates and execute helpful commands.",source:"@site/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/very_good_cli/docs/overview",draft:!1,editUrl:"https://github.com/verygoodopensource/very_good_cli/tree/main/site/docs/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Templates",permalink:"/very_good_cli/docs/category/templates"}},l={},c=[{value:"Quick Start \ud83d\ude80",id:"quick-start-",level:2},{value:"Prerequisites \ud83d\udcdd",id:"prerequisites-",level:3},{value:"Installing",id:"installing",level:2},{value:"Commands",id:"commands",level:2},{value:"<code>very_good create</code>",id:"very_good-create",level:3},{value:"<code>very_good packages get</code>",id:"very_good-packages-get",level:3},{value:"<code>very_good test</code>",id:"very_good-test",level:3},{value:"<code>very_good --help</code>",id:"very_good---help",level:3}],d={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Very Good CLI is a Command-Line interface that enables you to generate VGV-opinionated templates and execute helpful commands."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/VeryGoodOpenSource/very_good_cli/main/doc/assets/very_good_create.gif",alt:"Very Good CLI"})),(0,o.kt)("h2",{id:"quick-start-"},"Quick Start \ud83d\ude80"),(0,o.kt)("h3",{id:"prerequisites-"},"Prerequisites \ud83d\udcdd"),(0,o.kt)("p",null,"In order to use Very Good CLI you must have ",(0,o.kt)("a",{parentName:"p",href:"https://dart.dev/get-dart"},"Dart")," and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/get-started/install"},"Flutter")," installed on your machine."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Very Good CLI requires Dart ",(0,o.kt)("inlineCode",{parentName:"p"},'">=2.13.0 <3.0.0"'))),(0,o.kt)("h2",{id:"installing"},"Installing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"dart pub global activate very_good_cli\n")),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)("h3",{id:"very_good-create"},(0,o.kt)("inlineCode",{parentName:"h3"},"very_good create")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"very_good create")," command allows you to create a very good project in seconds based on the provided template. The ",(0,o.kt)("a",{parentName:"p",href:"/docs/templates/core"},"Flutter Starter App (core)")," template is used by default."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'Creates a new very good project in the specified directory.\n\nUsage: very_good create <project name>\n-h, --help                    Print this usage information.\n-o, --output-directory        The desired output directory when creating a new project.\n    --desc                    The description for this new project.\n                              (defaults to "A Very Good Project created by Very Good CLI.")\n    --executable-name         Used by the dart_cli template, the CLI executable name (defaults to the project name)\n    --org-name                The organization for this new project.\n                              (defaults to "com.example.verygoodcore")\n-t, --template                The template used to generate this new project.\n\n          [core] (default)    Generate a Very Good Flutter application.\n          [dart_cli]          Generate a Very Good Dart CLI application.\n          [dart_pkg]          Generate a reusable Dart package.\n          [docs_site]         Generate a Very Good documentation site.\n          [flutter_pkg]       Generate a reusable Flutter package.\n          [flutter_plugin]    Generate a reusable Flutter plugin.\n\n    --android                 The plugin supports the Android platform.\n                              (defaults to "true")\n    --ios                     The plugin supports the iOS platform.\n                              (defaults to "true")\n    --web                     The plugin supports the Web platform.\n                              (defaults to "true")\n    --linux                   The plugin supports the Linux platform.\n                              (defaults to "true")\n    --macos                   The plugin supports the macOS platform.\n                              (defaults to "true")\n    --windows                 The plugin supports the Windows platform.\n                              (defaults to "true")\n')),(0,o.kt)("h3",{id:"very_good-packages-get"},(0,o.kt)("inlineCode",{parentName:"h3"},"very_good packages get")),(0,o.kt)("p",null,"Get packages in a Dart or Flutter project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# Install packages in the current directory\nvery_good packages get\n\n# Install packages in ./some/other/directory\nvery_good packages get ./some/other/directory\n\n# Install packages recursively\nvery_good packages get --recursive\n\n# Install packages recursively (shorthand)\nvery_good packages get -r\n")),(0,o.kt)("h3",{id:"very_good-test"},(0,o.kt)("inlineCode",{parentName:"h3"},"very_good test")),(0,o.kt)("p",null,"Run tests in a Dart or Flutter project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# Run all tests\nvery_good test\n\n# Run all tests and collect coverage\nvery_good test --coverage\n\n# Run all tests and enforce 100% coverage\nvery_good test --coverage --min-coverage 100\n\n# Run only tests in ./some/other/directory\nvery_good test ./some/other/directory\n\n# Run tests recursively\nvery_good test --recursive\n\n# Run tests recursively (shorthand)\nvery_good test -r\n")),(0,o.kt)("h3",{id:"very_good---help"},(0,o.kt)("inlineCode",{parentName:"h3"},"very_good --help")),(0,o.kt)("p",null,"See the complete list of commands and usage information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'\ud83e\udd84 A Very Good Command-Line Interface\n\nUsage: very_good <command> [arguments]\n\nGlobal options:\n-h, --help           Print this usage information.\n    --version        Print the current version.\n    --analytics      Toggle anonymous usage statistics.\n\n          [false]    Disable anonymous usage statistics\n          [true]     Enable anonymous usage statistics\n\nAvailable commands:\n  create     very_good create <output directory>\n             Creates a new very good project in the specified directory.\n  packages   Command for managing packages.\n  test       Run tests in a Dart or Flutter project.\n\nRun "very_good help <command>" for more information about a command.\n')))}p.isMDXComponent=!0}}]);