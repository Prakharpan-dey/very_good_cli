// To generate this file, run: tool/generate_test_optimizer_bundle.sh
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint, implicit_dynamic_list_literal, implicit_dynamic_map_literal, inference_failure_on_collection_literal

import 'package:mason/mason.dart';

final testOptimizerBundle = MasonBundle.fromJson(<String, dynamic>{
  "files": [
    {
      "path": "test/.test_optimizer.dart",
      "data":
          "Ly8gR0VORVJBVEVEIENPREUgLSBETyBOT1QgTU9ESUZZIEJZIEhBTkQKLy8gQ29uc2lkZXIgYWRkaW5nIHRoaXMgZmlsZSB0byB5b3VyIC5naXRpZ25vcmUuCgp7eyNpc0ZsdXR0ZXJ9fWltcG9ydCAnZGFydDppbyc7CmltcG9ydCAnZGFydDp0eXBlZF9kYXRhJzsKCmltcG9ydCAncGFja2FnZTpmbHV0dGVyX3Rlc3QvZmx1dHRlcl90ZXN0LmRhcnQnOwp7ey9pc0ZsdXR0ZXJ9fXt7XmlzRmx1dHRlcn19aW1wb3J0ICdwYWNrYWdlOnRlc3QvdGVzdC5kYXJ0Jzt7ey9pc0ZsdXR0ZXJ9fQoKe3sjdGVzdHN9fWltcG9ydCAne3t7cGF0aH19fScgYXMge3tpZGVudGlmaWVyfX07Cnt7L3Rlc3RzfX0Kdm9pZCBtYWluKCkgewp7eyNpc0ZsdXR0ZXJ9fSAgZ29sZGVuRmlsZUNvbXBhcmF0b3IgPSBfVGVzdE9wdGltaXphdGlvbkF3YXJlR29sZGVuRmlsZUNvbXBhcmF0b3IoZ29sZGVuRmlsZUNvbXBhcmF0b3IgYXMgTG9jYWxGaWxlQ29tcGFyYXRvcik7e3svaXNGbHV0dGVyfX0Ke3sjdGVzdHN9fSAgZ3JvdXAoJ3t7e3BhdGh9fX0nLCAoKSB7IHt7aWRlbnRpZmllcn19Lm1haW4oKTsgfSk7Cnt7L3Rlc3RzfX19Cgp7eyNpc0ZsdXR0ZXJ9fQpjbGFzcyBfVGVzdE9wdGltaXphdGlvbkF3YXJlR29sZGVuRmlsZUNvbXBhcmF0b3IgZXh0ZW5kcyBHb2xkZW5GaWxlQ29tcGFyYXRvciB7CiAgZmluYWwgTGlzdDxTdHJpbmc+IGdvbGRlbkZpbGVQYXRoczsKICBmaW5hbCBMb2NhbEZpbGVDb21wYXJhdG9yIHByZXZpb3VzR29sZGVuRmlsZUNvbXBhcmF0b3I7CgogIF9UZXN0T3B0aW1pemF0aW9uQXdhcmVHb2xkZW5GaWxlQ29tcGFyYXRvcih0aGlzLnByZXZpb3VzR29sZGVuRmlsZUNvbXBhcmF0b3IpCiAgICAgIDogZ29sZGVuRmlsZVBhdGhzID0gX2dvbGRlbkZpbGVQYXRoczsKCiAgc3RhdGljIExpc3Q8U3RyaW5nPiBnZXQgX2dvbGRlbkZpbGVQYXRocyA9PgogICAgICBEaXJlY3RvcnkuZnJvbVVyaSgoZ29sZGVuRmlsZUNvbXBhcmF0b3IgYXMgTG9jYWxGaWxlQ29tcGFyYXRvcikuYmFzZWRpcikKICAgICAgICAgIC5saXN0U3luYyhyZWN1cnNpdmU6IHRydWUsIGZvbGxvd0xpbmtzOiB0cnVlKQogICAgICAgICAgLndoZXJlVHlwZTxGaWxlPigpCiAgICAgICAgICAubWFwKChmaWxlKSA9PiBmaWxlLnBhdGgpCiAgICAgICAgICAud2hlcmUoKHBhdGgpID0+IHBhdGguZW5kc1dpdGgoJy5wbmcnKSkKICAgICAgICAgIC50b0xpc3QoKTsKICBAb3ZlcnJpZGUKICBGdXR1cmU8Ym9vbD4gY29tcGFyZShVaW50OExpc3QgaW1hZ2VCeXRlcywgVXJpIGdvbGRlbikgID0+IHByZXZpb3VzR29sZGVuRmlsZUNvbXBhcmF0b3IuY29tcGFyZShpbWFnZUJ5dGVzLCBnb2xkZW4pOwoKICBAb3ZlcnJpZGUKICBVcmkgZ2V0VGVzdFVyaShVcmkga2V5LCBpbnQ/IHZlcnNpb24pIHsKICAgIGZpbmFsIGtleVN0cmluZyA9IGtleS50b0ZpbGVQYXRoKCk7CiAgICByZXR1cm4gVXJpLnBhcnNlKGdvbGRlbkZpbGVQYXRocwogICAgICAgIC5zaW5nbGVXaGVyZSgoZ29sZGVuRmlsZVBhdGgpID0+IGdvbGRlbkZpbGVQYXRoLmVuZHNXaXRoKGtleVN0cmluZykpKTsKICB9CgogIEBvdmVycmlkZQogIEZ1dHVyZTx2b2lkPiB1cGRhdGUoVXJpIGdvbGRlbiwgVWludDhMaXN0IGltYWdlQnl0ZXMpID0+IHByZXZpb3VzR29sZGVuRmlsZUNvbXBhcmF0b3IudXBkYXRlKGdvbGRlbiwgaW1hZ2VCeXRlcyk7Cgp9Cnt7L2lzRmx1dHRlcn19",
      "type": "text",
    },
  ],
  "hooks": [
    {
      "path": "lib/dart_identifier_generator.dart",
      "data":
          "Ly8vIHtAdGVtcGxhdGUgZGFydF9pZGVudGlmaWVyX2dlbmVyYXRvcn0KLy8vIEEgY2xhc3MgdGhhdCBnZW5lcmF0ZXMgdmFsaWQgRGFydCBpZGVudGlmaWVycy4KLy8vCi8vLyBTZWUgYWxzbzoKLy8vCi8vLyAqIFNlY3Rpb24gMTcuMzcgZnJvbSBbRGFydCBMYW5ndWFnZSBTcGVjaWZpY2F0aW9uXShodHRwczovL2RhcnQuZGV2L2d1aWRlcy9sYW5ndWFnZS9zcGVjaWZpY2F0aW9ucy9EYXJ0TGFuZ1NwZWMtdjIuMTAucGRmKQovLy8ge0BlbmR0ZW1wbGF0ZX0KY2xhc3MgRGFydElkZW50aWZpZXJHZW5lcmF0b3IgewogIC8vLyB7QG1hY3JvIGRhcnRfaWRlbnRpZmllcl9nZW5lcmF0b3J9CiAgRGFydElkZW50aWZpZXJHZW5lcmF0b3IoWwogICAgdGhpcy5fY2hhcnMgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWicsCiAgXSkgOiBfbmV4dElkID0gWzBdOwoKICBmaW5hbCBTdHJpbmcgX2NoYXJzOwogIGZpbmFsIExpc3Q8aW50PiBfbmV4dElkOwoKICAvLy8gR2VuZXJhdGUgdGhlIG5leHQgc2hvcnQgaWRlbnRpZmllci4KICBTdHJpbmcgbmV4dCgpIHsKICAgIGZpbmFsIHIgPSA8U3RyaW5nPlsnXycsIGZvciAoZmluYWwgY2hhciBpbiBfbmV4dElkKSBfY2hhcnNbY2hhcl1dOwogICAgX2luY3JlbWVudCgpOwogICAgcmV0dXJuIHIuam9pbigpOwogIH0KCiAgdm9pZCBfaW5jcmVtZW50KCkgewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfbmV4dElkLmxlbmd0aDsgaSsrKSB7CiAgICAgIGZpbmFsIHZhbCA9ICsrX25leHRJZFtpXTsKICAgICAgaWYgKHZhbCA+PSBfY2hhcnMubGVuZ3RoKSB7CiAgICAgICAgX25leHRJZFtpXSA9IDA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9CiAgICBfbmV4dElkLmFkZCgwKTsKICB9Cn0K",
      "type": "text",
    },
    {
      "path": "lib/pre_gen.dart",
      "data":
          "Ly8gTm8gbmVlZCBmb3IgZG9jdW1lbnRhdGlvbiBpbiBicmljayBob29rcwovLyBpZ25vcmVfZm9yX2ZpbGU6IHB1YmxpY19tZW1iZXJfYXBpX2RvY3MKCmltcG9ydCAnZGFydDppbyc7CgppbXBvcnQgJ3BhY2thZ2U6aG9va3MvZGFydF9pZGVudGlmaWVyX2dlbmVyYXRvci5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm1hc29uL21hc29uLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6cGF0aC9wYXRoLmRhcnQnIGFzIHBhdGg7Cgp0eXBlZGVmIEV4aXRGbiA9IE5ldmVyIEZ1bmN0aW9uKGludCBjb2RlKTsKCkV4aXRGbiBleGl0Rm4gPSBleGl0OwoKU3RyaW5nIHNraXBWZXJ5R29vZE9wdGltaXphdGlvblRhZyA9ICdza2lwX3ZlcnlfZ29vZF9vcHRpbWl6YXRpb24nOwpSZWdFeHAgc2tpcFZlcnlHb29kT3B0aW1pemF0aW9uUmVnRXhwID0gUmVnRXhwKAogICJAVGFnc1xccypcXChcXHMqXFxbW1xcc1xcU10qP1tcIiddJHNraXBWZXJ5R29vZE9wdGltaXphdGlvblRhZ1tcIiddW1xcc1xcU10qP1xcXVxccypcXCkiLAogIG11bHRpTGluZTogdHJ1ZSwKKTsKCkZ1dHVyZTx2b2lkPiBydW4oSG9va0NvbnRleHQgY29udGV4dCkgYXN5bmMgewogIGZpbmFsIHBhY2thZ2VSb290ID0gY29udGV4dC52YXJzWydwYWNrYWdlLXJvb3QnXSBhcyBTdHJpbmc7CiAgZmluYWwgdGVzdERpciA9IERpcmVjdG9yeShwYXRoLmpvaW4ocGFja2FnZVJvb3QsICd0ZXN0JykpOwoKICBpZiAoIXRlc3REaXIuZXhpc3RzU3luYygpKSB7CiAgICBjb250ZXh0LmxvZ2dlci5lcnIoJ0NvdWxkIG5vdCBmaW5kIGRpcmVjdG9yeSAke3Rlc3REaXIucGF0aH0nKTsKICAgIGV4aXRGbigxKTsKICB9CgogIGZpbmFsIHB1YnNwZWMgPSBGaWxlKHBhdGguam9pbihwYWNrYWdlUm9vdCwgJ3B1YnNwZWMueWFtbCcpKTsKICBpZiAoIXB1YnNwZWMuZXhpc3RzU3luYygpKSB7CiAgICBjb250ZXh0LmxvZ2dlci5lcnIoJ0NvdWxkIG5vdCBmaW5kIHB1YnNwZWMueWFtbCBhdCAke3Rlc3REaXIucGF0aH0nKTsKICAgIGV4aXRGbigxKTsKICB9CgogIGZpbmFsIHB1YnNwZWNDb250ZW50cyA9IGF3YWl0IHB1YnNwZWMucmVhZEFzU3RyaW5nKCk7CiAgZmluYWwgZmx1dHRlclNka1JlZ0V4cCA9IFJlZ0V4cChyJ3NkazpccypmbHV0dGVyJCcsIG11bHRpTGluZTogdHJ1ZSk7CiAgZmluYWwgaXNGbHV0dGVyID0gZmx1dHRlclNka1JlZ0V4cC5oYXNNYXRjaChwdWJzcGVjQ29udGVudHMpOwoKICBmaW5hbCBpZGVudGlmaWVyR2VuZXJhdG9yID0gRGFydElkZW50aWZpZXJHZW5lcmF0b3IoKTsKICBmaW5hbCB0ZXN0SWRlbnRpZmllclRhYmxlID0gPE1hcDxTdHJpbmcsIFN0cmluZz4+W107CiAgZmluYWwgdGVzdHMgPSB0ZXN0RGlyCiAgICAgIC5saXN0U3luYyhyZWN1cnNpdmU6IHRydWUpCiAgICAgIC53aGVyZSgoZW50aXR5KSA9PiBlbnRpdHkuaXNUZXN0KTsKCiAgZmluYWwgbm90T3B0aW1pemVkVGVzdHMgPSBhd2FpdCBnZXROb3RPcHRpbWl6ZWRUZXN0cyh0ZXN0cywgdGVzdERpci5wYXRoKTsKCiAgZm9yIChmaW5hbCBlbnRpdHkgaW4gdGVzdHMpIHsKICAgIGZpbmFsIHJlbGF0aXZlUGF0aCA9IHBhdGgKICAgICAgICAucmVsYXRpdmUoZW50aXR5LnBhdGgsIGZyb206IHRlc3REaXIucGF0aCkKICAgICAgICAucmVwbGFjZUFsbChyJ1wnLCAnLycpOwogICAgdGVzdElkZW50aWZpZXJUYWJsZS5hZGQoewogICAgICAncGF0aCc6IHJlbGF0aXZlUGF0aCwKICAgICAgJ2lkZW50aWZpZXInOiBpZGVudGlmaWVyR2VuZXJhdG9yLm5leHQoKSwKICAgIH0pOwogIH0KCiAgZmluYWwgb3B0aW1pemVkVGVzdHNJZGVudGlmaWVyVGFibGUgPSB0ZXN0SWRlbnRpZmllclRhYmxlCiAgICAgIC53aGVyZSgoZSkgPT4gIW5vdE9wdGltaXplZFRlc3RzLmNvbnRhaW5zKGVbJ3BhdGgnXSkpCiAgICAgIC50b0xpc3QoKTsKCiAgY29udGV4dC52YXJzID0gewogICAgJ3Rlc3RzJzogb3B0aW1pemVkVGVzdHNJZGVudGlmaWVyVGFibGUsCiAgICAnaXNGbHV0dGVyJzogaXNGbHV0dGVyLAogICAgJ25vdE9wdGltaXplZFRlc3RzJzogbm90T3B0aW1pemVkVGVzdHMsCiAgfTsKfQoKZXh0ZW5zaW9uIG9uIEZpbGVTeXN0ZW1FbnRpdHkgewogIGJvb2wgZ2V0IGlzVGVzdCB7CiAgICByZXR1cm4gdGhpcyBpcyBGaWxlICYmIHBhdGguYmFzZW5hbWUodGhpcy5wYXRoKS5lbmRzV2l0aCgnX3Rlc3QuZGFydCcpOwogIH0KfQoKRnV0dXJlPExpc3Q8U3RyaW5nPj4gZ2V0Tm90T3B0aW1pemVkVGVzdHMoCiAgSXRlcmFibGU8RmlsZVN5c3RlbUVudGl0eT4gdGVzdHMsCiAgU3RyaW5nIHRlc3REaXIsCikgYXN5bmMgewogIGZpbmFsIHBhdGhzID0gdGVzdHMubWFwKChlKSA9PiBlLnBhdGgpLnRvTGlzdCgpOwogIGZpbmFsIGZvcm1hdHRlZFBhdGhzID0gcGF0aHMubWFwKChlKSA9PiBlLnJlcGxhY2VBbGwoJy8uLycsICcvJykpLnRvTGlzdCgpOwoKICBmaW5hbCBmaWxlRnV0dXJlcyA9IGZvcm1hdHRlZFBhdGhzLm1hcChfY2hlY2tGaWxlRm9yU2tpcFZlcnlHb29kT3B0aW1pemF0aW9uKTsKICBmaW5hbCBmaWxlUmVzdWx0cyA9IGF3YWl0IEZ1dHVyZS53YWl0KGZpbGVGdXR1cmVzKTsKCiAgZmluYWwgdGVzdFdpdGhWZXJ5R29vZFRlc3QgPSA8U3RyaW5nPltdOwogIGZvciAodmFyIGkgPSAwOyBpIDwgZm9ybWF0dGVkUGF0aHMubGVuZ3RoOyBpKyspIHsKICAgIGlmIChmaWxlUmVzdWx0c1tpXSkgewogICAgICB0ZXN0V2l0aFZlcnlHb29kVGVzdC5hZGQoZm9ybWF0dGVkUGF0aHNbaV0pOwogICAgfQogIH0KCiAgLy8vIEZvcm1hdCB0byByZWxhdGl2ZSBwYXRoCiAgZmluYWwgcmVsYXRpdmVQYXRocyA9IHRlc3RXaXRoVmVyeUdvb2RUZXN0CiAgICAgIC5tYXAoKGUpID0+IHBhdGgucmVsYXRpdmUoZSwgZnJvbTogdGVzdERpcikpCiAgICAgIC50b0xpc3QoKTsKCiAgcmV0dXJuIHJlbGF0aXZlUGF0aHM7Cn0KCi8vLyBDaGVjayBpZiBhIHNpbmdsZSBmaWxlIGNvbnRhaW5zIHNraXBfdmVyeV9nb29kX29wdGltaXphdGlvbiB0YWcKRnV0dXJlPGJvb2w+IF9jaGVja0ZpbGVGb3JTa2lwVmVyeUdvb2RPcHRpbWl6YXRpb24oU3RyaW5nIHBhdGgpIGFzeW5jIHsKICBmaW5hbCBmaWxlID0gRmlsZShwYXRoKTsKICBpZiAoIWZpbGUuZXhpc3RzU3luYygpKSByZXR1cm4gZmFsc2U7CiAgZmluYWwgY29udGVudCA9IGF3YWl0IGZpbGUucmVhZEFzU3RyaW5nKCk7CiAgcmV0dXJuIHNraXBWZXJ5R29vZE9wdGltaXphdGlvblJlZ0V4cC5oYXNNYXRjaChjb250ZW50KTsKfQo=",
      "type": "text",
    },
    {
      "path": "pre_gen.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOm1hc29uL21hc29uLmRhcnQnOwoKaW1wb3J0ICdsaWIvcHJlX2dlbi5kYXJ0JyBhcyBwcmVfZ2VuOwoKRnV0dXJlPHZvaWQ+IHJ1bihIb29rQ29udGV4dCBjb250ZXh0KSBhc3luYyB7CiAgYXdhaXQgcHJlX2dlbi5ydW4oY29udGV4dCk7Cn0K",
      "type": "text",
    },
    {
      "path": "pubspec.yaml",
      "data":
          "bmFtZTogaG9va3MKcHVibGlzaF90bzogbm9uZQoKZW52aXJvbm1lbnQ6CiAgc2RrOiBeMy45LjAKCmRlcGVuZGVuY2llczoKICBtYXNvbjogXjAuMS4wCiAgcGF0aDogXjEuOC4xCgojIEJld2FyZTogb24gaG9va3MsIGV2ZW4gZGV2IGRlcGVuZGVuY2llcyBoYXZlIHRvIGJlIGNvbXBhdGlibGUgdG8gYWxsIGRhcnQgdmVyc2lvbnMgY292ZXJlZCBieQojIHRoZSBzZGsgY29uc3RyYWludHMgYWJvdmUKZGV2X2RlcGVuZGVuY2llczoKICBtb2NrdGFpbDogXjEuMC4wCiAgdGVzdDogXjEuMjUuMAogIHZlcnlfZ29vZF9hbmFseXNpczogXjkuMC4wCg==",
      "type": "text",
    },
    {
      "path": "test/dart_identifier_generator_test.dart",
      "data":
          "aW1wb3J0ICdwYWNrYWdlOmhvb2tzL2RhcnRfaWRlbnRpZmllcl9nZW5lcmF0b3IuZGFydCc7CmltcG9ydCAncGFja2FnZTp0ZXN0L3Rlc3QuZGFydCc7Cgp2b2lkIG1haW4oKSB7CiAgZ3JvdXAoJyREYXJ0SWRlbnRpZmllckdlbmVyYXRvcicsICgpIHsKICAgIHRlc3QoJ2NhbiBiZSBpbnN0YW50aWF0ZWQnLCAoKSB7CiAgICAgIGV4cGVjdChEYXJ0SWRlbnRpZmllckdlbmVyYXRvci5uZXcsIHJldHVybnNOb3JtYWxseSk7CiAgICB9KTsKCiAgICBncm91cCgnbmV4dCcsICgpIHsKICAgICAgdGVzdCgncmV0dXJucyBub3JtYWxseScsICgpIHsKICAgICAgICBmaW5hbCBnZW5lcmF0b3IgPSBEYXJ0SWRlbnRpZmllckdlbmVyYXRvcigpOwogICAgICAgIGV4cGVjdChnZW5lcmF0b3IubmV4dCwgcmV0dXJuc05vcm1hbGx5KTsKICAgICAgfSk7CgogICAgICB0ZXN0KCdnZW5lcmF0ZXMgdW5pcXVlIHN0cmluZ3MnLCAoKSB7CiAgICAgICAgZmluYWwgZ2VuZXJhdG9yID0gRGFydElkZW50aWZpZXJHZW5lcmF0b3IoKTsKICAgICAgICBmaW5hbCBpZHMgPSA8U3RyaW5nPnt9OwogICAgICAgIGNvbnN0IGNvdW50ID0gMTAwMDsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50OyBpKyspIHsKICAgICAgICAgIGZpbmFsIGlkID0gZ2VuZXJhdG9yLm5leHQoKTsKICAgICAgICAgIGlkcy5hZGQoaWQpOwogICAgICAgIH0KICAgICAgICBleHBlY3QoaWRzLmxlbmd0aCwgY291bnQpOwogICAgICB9KTsKCiAgICAgIHRlc3QoJ2dlbmVyYXRlcyB2YWxpZCBkYXJ0IGlkZW50aWZpZXJzJywgKCkgewogICAgICAgIC8vIEZvciBhIGZ1bGwgc3BlY2lmaWNhdGlvbiBvZiB2YWxpZCBkYXJ0IGlkZW50aWZpZXJzLCByZWFkCiAgICAgICAgLy8gU2VjdGlvbiAxNy4zNyBmcm9tIHRoZSBbRGFydCBMYW5ndWFnZSBTcGVjaWZpY2F0aW9uXShodHRwczovL2RhcnQuZGV2L2d1aWRlcy9sYW5ndWFnZS9zcGVjaWZpY2F0aW9ucy9EYXJ0TGFuZ1NwZWMtdjIuMTAucGRmKS4KICAgICAgICBmaW5hbCBnZW5lcmF0b3IgPSBEYXJ0SWRlbnRpZmllckdlbmVyYXRvcigpOwogICAgICAgIGZpbmFsIGlkcyA9IDxTdHJpbmc+W107CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDAwOyBpKyspIHsKICAgICAgICAgIGZpbmFsIGlkID0gZ2VuZXJhdG9yLm5leHQoKTsKICAgICAgICAgIGlkcy5hZGQoaWQpOwogICAgICAgIH0KCiAgICAgICAgZXhwZWN0KGlkcy53aGVyZSgoaWQpID0+IF9kYXJ0UmVzZXJ2ZWRLZXl3b3Jkcy5jb250YWlucyhpZCkpLCBpc0VtcHR5KTsKICAgICAgICBleHBlY3QoCiAgICAgICAgICBpZHMuZXZlcnkoKGlkKSB7CiAgICAgICAgICAgIGZpbmFsIGlkU3RhcnQgPSBpZC5jb2RlVW5pdEF0KDApOwogICAgICAgICAgICBmaW5hbCBpc0FscGhhYmV0aWMgPQogICAgICAgICAgICAgICAgKGlkU3RhcnQgPj0gNjUgJiYgaWRTdGFydCA8PSA5MCkgfHwKICAgICAgICAgICAgICAgIChpZFN0YXJ0ID49IDk3ICYmIGlkU3RhcnQgPD0gMTIyKTsKICAgICAgICAgICAgZmluYWwgaXNVbmRlcnNjb3JlID0gaWRTdGFydCA9PSA5NTsKICAgICAgICAgICAgZmluYWwgaXNEb2xsYXJTaWduID0gaWRTdGFydCA9PSAzNjsKICAgICAgICAgICAgcmV0dXJuIGlzQWxwaGFiZXRpYyB8fCBpc1VuZGVyc2NvcmUgfHwgaXNEb2xsYXJTaWduOwogICAgICAgICAgfSksCiAgICAgICAgICB0cnVlLAogICAgICAgICk7CiAgICAgICAgZXhwZWN0KAogICAgICAgICAgaWRzLmV2ZXJ5KChpZCkgewogICAgICAgICAgICBmaW5hbCBpZFBhcnQgPSBpZC5jb2RlVW5pdHMuc2tpcCgxKTsKICAgICAgICAgICAgcmV0dXJuIGlkUGFydC5ldmVyeSgoYXNjaWkpIHsKICAgICAgICAgICAgICBmaW5hbCBpc0FscGhhYmV0aWMgPQogICAgICAgICAgICAgICAgICAoYXNjaWkgPj0gNjUgJiYgYXNjaWkgPD0gOTApIHx8IChhc2NpaSA+PSA5NyAmJiBhc2NpaSA8PSAxMjIpOwogICAgICAgICAgICAgIGZpbmFsIGlzVW5kZXJzY29yZSA9IGFzY2lpID09IDk1OwogICAgICAgICAgICAgIGZpbmFsIGlzRG9sbGFyU2lnbiA9IGFzY2lpID09IDM2OwogICAgICAgICAgICAgIGZpbmFsIGlzRGlnaXQgPSBhc2NpaSA+PSA0OCAmJiBhc2NpaSA8PSA1NzsKICAgICAgICAgICAgICByZXR1cm4gaXNBbHBoYWJldGljIHx8IGlzVW5kZXJzY29yZSB8fCBpc0RvbGxhclNpZ24gfHwgaXNEaWdpdDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KSwKICAgICAgICAgIHRydWUsCiAgICAgICAgKTsKICAgICAgfSk7CiAgICB9KTsKICB9KTsKfQoKLy8gQWxsIHJlc2VydmVkIGtleXdvcmRzIGluIFtEYXJ0IDIuMTkuMl0oaHR0cHM6Ly9kYXJ0LmRldi9ndWlkZXMvbGFuZ3VhZ2UvbGFuZ3VhZ2UtdG91ciNrZXl3b3JkcykuCmNvbnN0IF9kYXJ0UmVzZXJ2ZWRLZXl3b3JkcyA9IFsKICAnYWJzdHJhY3QnLAogICdhcycsCiAgJ2Fzc2VydCcsCiAgJ2FzeW5jJywKICAnYXdhaXQnLAogICdicmVhaycsCiAgJ2Nhc2UnLAogICdjYXRjaCcsCiAgJ2NsYXNzJywKICAnY29uc3QnLAogICdjb250aW51ZScsCiAgJ2NvdmFyaWFudCcsCiAgJ2RlZmF1bHQnLAogICdkZWZlcnJlZCcsCiAgJ2RvJywKICAnZHluYW1pYycsCiAgJ2Vsc2UnLAogICdlbnVtJywKICAnZXhwb3J0JywKICAnZXh0ZW5kcycsCiAgJ2V4dGVuc2lvbicsCiAgJ2V4dGVybmFsJywKICAnZmFjdG9yeScsCiAgJ2ZhbHNlJywKICAnZmluYWwnLAogICdmaW5hbGx5JywKICAnZm9yJywKICAnRnVuY3Rpb24nLAogICdnZXQnLAogICdoaWRlJywKICAnaWYnLAogICdpbXBsZW1lbnRzJywKICAnaW1wb3J0JywKICAnaW4nLAogICdpbnRlcmZhY2UnLAogICdpcycsCiAgJ2xhdGUnLAogICdsaWJyYXJ5JywKICAnbWl4aW4nLAogICduZXcnLAogICdudWxsJywKICAnb24nLAogICdvcGVyYXRvcicsCiAgJ3BhcnQnLAogICdyZXF1aXJlZCcsCiAgJ3JldGhyb3cnLAogICdyZXR1cm4nLAogICdzZXQnLAogICdzaG93JywKICAnc3RhdGljJywKICAnc3VwZXInLAogICdzd2l0Y2gnLAogICdzeW5jJywKICAndGhpcycsCiAgJ3Rocm93JywKICAndHJ1ZScsCiAgJ3RyeScsCiAgJ3R5cGVkZWYnLAogICd2YXInLAogICd2b2lkJywKICAnd2hpbGUnLAogICd3aXRoJywKICAneWllbGQnLApdOwo=",
      "type": "text",
    },
    {
      "path": "test/pre_gen_test.dart",
      "data":
          "",
      "type": "text",
    },
  ],
  "name": "test_optimizer",
  "description": "A brick that generates a single entrypoint for Dart tests.",
  "version": "0.1.0+1",
  "environment": {"mason": "^0.1.0"},
  "publish_to": "none",
  "readme": {
    "path": "README.md",
    "data":
        "IyB0ZXN0X29wdGltaXplcgoKWyFbUG93ZXJlZCBieSBNYXNvbl0oaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9lbmRwb2ludD91cmw9aHR0cHMlM0ElMkYlMkZ0aW55dXJsLmNvbSUyRm1hc29uLWJhZGdlKV0oaHR0cHM6Ly9naXRodWIuY29tL2ZlbGFuZ2VsL21hc29uKQoKQSBicmljayB0aGF0IGdlbmVyYXRlcyBhIHNpbmdsZSBlbnRyeXBvaW50IGZvciBEYXJ0IHRlc3RzLgoKX0dlbmVyYXRlZCBieSBbbWFzb25dWzFdIPCfp7FfCgojIyBHZXR0aW5nIFN0YXJ0ZWQg8J+agAoKYGBgc2gKbWFzb24gbWFrZSB0ZXN0X29wdGltaXplciAtLXBhY2thZ2Utcm9vdCAuL3BhdGgvdG8vcGFja2FnZSAtLW9uLWNvbmZsaWN0IG92ZXJ3cml0ZQpgYGAKClRoZSBhYm92ZSBjb21tYW5kIHdpbGwgZ2VuZXJhdGUgYSBgLnRlc3Rfb3B0aW1pemVyLmRhcnRgIGluIHRoZSBgdGVzdGAgZGlyZWN0b3J5IHRoYXQgaW1wb3J0cyBhbmQgZXhlY3V0ZXMgYWxsIHRlc3RzCgpgYGBkYXJ0Ci8vIEdFTkVSQVRFRCBDT0RFIC0gRE8gTk9UIE1PRElGWSBCWSBIQU5ECi8vIENvbnNpZGVyIGFkZGluZyB0aGlzIGZpbGUgdG8geW91ciAuZ2l0aWdub3JlLgoKaW1wb3J0ICdhcHAvdmlldy9hcHBfdGVzdC5kYXJ0JyBhcyBfYTsKaW1wb3J0ICdjb3VudGVyL2N1Yml0L2NvdW50ZXJfY3ViaXRfdGVzdC5kYXJ0JyBhcyBfYjsKaW1wb3J0ICdjb3VudGVyL3ZpZXcvY291bnRlcl9wYWdlX3Rlc3QuZGFydCcgYXMgX2M7Cgp2b2lkIG1haW4oKSB7CiAgZ3JvdXAoJ2FwcF92aWV3X2FwcF90ZXN0X2RhcnQnLCAoKSB7IF9hLm1haW4oKTsgfSk7CiAgZ3JvdXAoJ2NvdW50ZXJfY3ViaXRfY291bnRlcl9jdWJpdF90ZXN0X2RhcnQnLCAoKSB7IF9iLm1haW4oKTsgfSk7CiAgZ3JvdXAoJ2NvdW50ZXJfdmlld19jb3VudGVyX3BhZ2VfdGVzdF9kYXJ0JywgKCkgeyBfYy5tYWluKCk7IH0pOwp9CmBgYAoKWzFdOiBodHRwczovL2dpdGh1Yi5jb20vZmVsYW5nZWwvbWFzb24K",
    "type": "text",
  },
  "vars": {
    "package-root": {
      "type": "string",
      "description": "The path to the package root.",
      "default": ".",
      "prompt": "Please enter the path to the package root.",
    },
  },
});
